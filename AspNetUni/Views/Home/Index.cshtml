@* @model IEnumerable<AspNetUni.Models.TicketModel> *@
@model AspNetUni.Models.TicketPaginationViewModel

@{
    ViewData["Title"] = "Home Page";
}

<style>
    
    
</style>



<div class="text-center">
    <h2>Tickets</h2>

    <table class="table">
        <thead>
        <tr>
            <th>Artist</th>
            <th>Event</th>
            <th>Concert Date</th>
            <th>Location</th>
            <th>Price</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @if (Model.Tickets != null && Model.Tickets.Any())
        {
            @foreach (var ticket in Model.Tickets)
            {
                <partial name="TicketSummary" model="ticket" />
            }
        }
        else
        {
            <tr><td colspan="4">No tickets available</td></tr>
        }
        </tbody>
    </table>

    @* Pagination Controls *@
    <div style="margin-bottom: 10px">
        <div>
            <span>Items per page: </span>
            <a href="@Url.Action("Index", new { page = 1, pageSize = 5, category = Model.SelectedCategory })" class="btn btn-link @(Model.PageSize == 5 ? "active" : "")">5</a>
            <a href="@Url.Action("Index", new { page = 1, pageSize = 10, category = Model.SelectedCategory })" class="btn btn-link @(Model.PageSize == 10 ? "active" : "")">10</a>
            <a href="@Url.Action("Index", new { page = 1, pageSize = 20, category = Model.SelectedCategory })" class="btn btn-link @(Model.PageSize == 20 ? "active" : "")">20</a>
        </div>
    </div>

    @* Pagination *@
    <div style="display: flex;justify-content: center;">
        <ul  class="pagination">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize = Model.PageSize, category = Model.SelectedCategory })">First</a>
            </li>
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize, category = Model.SelectedCategory })">Previous</a>
            </li>
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize, category = Model.SelectedCategory })">Next</a>
            </li>
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.TotalPages, pageSize = Model.PageSize, category = Model.SelectedCategory })">Last</a>
            </li>
        </ul>
    </div>

</div>